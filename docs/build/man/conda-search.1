.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.46.4.
.TH CONDA "1" "1ì›” 2018" "Anaconda, Inc." "User Commands"
.SH NAME
conda \- conda search
.SH DESCRIPTION
usage: conda search [\-h] [\-n ENVIRONMENT | \fB\-p\fR PATH] [\-\-canonical] [\-f]
.TP
[\-\-names\-only] [\-\-use\-index\-cache] [\-o]
[\-\-platform {win\-32,win\-64,osx\-64,linux\-32,linux\-64}]
[\-\-spec] [\-\-reverse\-dependency] [\-\-offline] [\-c CHANNEL]
[\-\-override\-channels] [\-\-json] [\-\-debug] [\-\-verbose]
[\-\-use\-local] [\-k]
[regex]
.PP
Search for packages and display their information. The input is a
Python regular expression.  To perform a search with a search string that starts
with a \-, separate the search from the options with \fB\-\-\fR, like 'conda search \fB\-\-\fR \fB\-h\fR'.
.PP
A * in the results means that package is installed in the current
environment. A . means that package is not installed but is cached in the pkgs
directory.
.SH OPTIONS
.SS "positional arguments:"
.TP
regex
Package specification or Python regular expression to
search for (default: display all packages).
.SS "optional arguments:"
.TP
\fB\-h\fR, \fB\-\-help\fR
Show this help message and exit.
.TP
\fB\-n\fR ENVIRONMENT, \fB\-\-name\fR ENVIRONMENT
Name of environment (in root prefix/envs:
/Users/joelkim/.conda/envs).
.TP
\fB\-p\fR PATH, \fB\-\-prefix\fR PATH
Full path to environment prefix (default:
\fI\,root prefix/envs/conda\-docs\/\fP).
.TP
\fB\-\-canonical\fR
Output canonical names of packages only.
.TP
\fB\-f\fR, \fB\-\-full\-name\fR
Only search for full name, ie. ^<regex>$.
.TP
\fB\-\-names\-only\fR
Output only package names.
.TP
\fB\-\-use\-index\-cache\fR
Use cache of channel index files.
.TP
\fB\-o\fR, \fB\-\-outdated\fR
Only display installed but outdated packages.
.TP
\fB\-\-platform\fR {win\-32,win\-64,osx\-64,linux\-32,linux\-64}
Search the given platform. Should be formatted like
\&'osx\-64', 'linux\-32', 'win\-64', and so on. The default
is to search the current platform.
.TP
\fB\-\-spec\fR
Treat the regex argument as a package specification
instead (package_name[=version[=build]]).
.TP
\fB\-\-reverse\-dependency\fR
Perform a reverse dependency search. When using this
flag, the \fB\-\-full\-name\fR flag is recommended. Use 'conda
info package' to see the dependencies of a package.
.TP
\fB\-\-offline\fR
Offline mode, don't connect to the Internet.
.TP
\fB\-c\fR CHANNEL, \fB\-\-channel\fR CHANNEL
Additional channel to search for packages. These are
URLs searched in the order they are given (including
file:// for local directories). Then, the defaults or
channels from .condarc are searched (unless
\fB\-\-override\-channels\fR is given). You can use 'defaults'
to get the default packages for conda, and 'system' to
get the system packages, which also takes .condarc
into account. You can also use any name and the
\&.condarc channel_alias value will be prepended. The
default channel_alias is http://conda.anaconda.org/.
.TP
\fB\-\-override\-channels\fR
Do not search default or .condarc channels. Requires
\fB\-\-channel\fR.
.TP
\fB\-\-json\fR
Report all output as json. Suitable for using conda
programmatically.
.TP
\fB\-\-debug\fR
Show debug output.
.TP
\fB\-\-verbose\fR, \fB\-v\fR
Use once for info, twice for debug, three times for
trace.
.TP
\fB\-\-use\-local\fR
Use locally built packages.
.TP
\fB\-k\fR, \fB\-\-insecure\fR
Allow conda to perform "insecure" SSL connections and
transfers.Equivalent to setting 'ssl_verify' to
\&'false'.
.SH EXAMPLES
Search for packages with 'scikit' in the name:
.IP
conda search scikit
.PP
Search for the 'python' package (but no other packages that have 'python' in
the name):
.IP
conda search \-f python
.PP
Search for packages for 64\-bit Linux (by default, packages for your current
platform are shown):
.IP
conda search \-\-platform linux\-64
