.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.46.4.
.TH CONDA "1" "1ì›” 2018" "Anaconda, Inc." "User Commands"
.SH NAME
conda \- conda build
.SH DESCRIPTION
usage: conda\-build [\-h] [\-V] [\-n] [\-\-output] [\-\-python PYTHON] [\-\-perl PERL]
.IP
[\-\-numpy NUMPY] [\-\-R R_BASE] [\-\-lua LUA]
[\-\-bootstrap BOOTSTRAP]
[\-\-append\-file APPEND_SECTIONS_FILE]
[\-\-clobber\-file CLOBBER_SECTIONS_FILE]
[\-m VARIANT_CONFIG_FILES] [\-\-old\-build\-string] [\-\-check]
[\-\-no\-anaconda\-upload] [\-\-no\-include\-recipe] [\-s] [\-t]
[\-\-no\-test] [\-b] [\-p] [\-\-skip\-existing] [\-\-keep\-old\-work]
[\-\-dirty] [\-q] [\-\-debug] [\-\-token TOKEN] [\-\-user USER]
[\-\-no\-force\-upload] [\-\-password PASSWORD] [\-\-sign SIGN]
[\-\-sign\-with SIGN_WITH] [\-\-identity IDENTITY]
[\-\-config\-file CONFIG_FILE] [\-\-repository REPOSITORY]
[\-\-no\-activate] [\-\-no\-build\-id] [\-\-croot CROOT] [\-\-verify]
[\-\-output\-folder OUTPUT_FOLDER]
[\-\-no\-prefix\-length\-fallback] [\-\-prefix\-length\-fallback]
[\-\-prefix\-length _PREFIX_LENGTH] [\-\-no\-locking]
[\-\-no\-remove\-work\-dir] [\-\-long\-test\-prefix]
[\-\-no\-long\-test\-prefix] [\-\-keep\-going]
[\-\-cache\-dir CACHE_DIR] [\-\-no\-copy\-test\-source\-files]
[\-c CHANNEL] [\-\-override\-channels]
RECIPE_PATH [RECIPE_PATH ...]
.PP
Tool for building conda packages. A conda package is a binary tarball
containing system\-level libraries, Python modules, executable programs, or
other components. conda keeps track of dependencies between packages and
platform specifics, making it simple to create working environments from
different sets of packages.
.SS "positional arguments:"
.TP
RECIPE_PATH
Path to recipe directory. Pass 'purge' here to clean
the work and test intermediates.
.SS "optional arguments:"
.TP
\fB\-h\fR, \fB\-\-help\fR
Show this help message and exit.
.TP
\fB\-V\fR, \fB\-\-version\fR
Show the conda\-build version number and exit.
.TP
\fB\-n\fR, \fB\-\-no\-source\fR
When templating can't be completed, do not obtain the
source to try fill in related template variables.
.TP
\fB\-\-output\fR
Output the conda package filename which would have
been created
.TP
\fB\-\-python\fR PYTHON
Set the Python version used by conda build.
.TP
\fB\-\-perl\fR PERL
Set the Perl version used by conda build.
.TP
\fB\-\-numpy\fR NUMPY
Set the NumPy version used by conda build.
.TP
\fB\-\-R\fR R_BASE
Set the R version used by conda build.
.TP
\fB\-\-lua\fR LUA
Set the Lua version used by conda build.
.TP
\fB\-\-bootstrap\fR BOOTSTRAP
Provide initial configuration in addition to recipe.
Can be a path to or name of an environment, which will
be emulated in the package.
.TP
\fB\-\-append\-file\fR APPEND_SECTIONS_FILE
Append data in meta.yaml with fields from this file.
Jinja2 is not done on appended fields
.TP
\fB\-\-clobber\-file\fR CLOBBER_SECTIONS_FILE
Clobber data in meta.yaml with fields from this file.
Jinja2 is not done on clobbered fields.
.TP
\fB\-m\fR VARIANT_CONFIG_FILES, \fB\-\-variant\-config\-files\fR VARIANT_CONFIG_FILES
Additional variant config files to add. These yaml
files can contain keys such as `c_compiler` and
`target_platform` to form a build matrix.
.TP
\fB\-\-old\-build\-string\fR
Disable hash additions to filenames to distinguish
package variants from one another. NOTE: any filename
collisions are yours to handle. Any variants with
overlapping names within a build will clobber each
other.
.TP
\fB\-\-check\fR
Only check (validate) the recipe.
.TP
\fB\-\-no\-anaconda\-upload\fR
Do not ask to upload the package to anaconda.org.
.TP
\fB\-\-no\-include\-recipe\fR
Don't include the recipe inside the built package.
.TP
\fB\-s\fR, \fB\-\-source\fR
Only obtain the source (but don't build).
.TP
\fB\-t\fR, \fB\-\-test\fR
Test package (assumes package is already built).
RECIPE_DIR argument can be either recipe directory, in
which case source download may be necessary to resolve
packageversion, or path to built package .tar.bz2
file, in which case no source is necessary.
.TP
\fB\-\-no\-test\fR
Do not test the package.
.TP
\fB\-b\fR, \fB\-\-build\-only\fR
Only run the build, without any post processing or
testing. Implies \fB\-\-no\-test\fR and \fB\-\-no\-anaconda\-upload\fR.
.TP
\fB\-p\fR, \fB\-\-post\fR
Run the post\-build logic. Implies \fB\-\-no\-test\fR and \fB\-\-noanaconda\-upload\fR.
.TP
\fB\-\-skip\-existing\fR
Skip recipes for which there already exists an
existing build(locally or in the channels).
.TP
\fB\-\-keep\-old\-work\fR
Do not remove anything from environment, even after
successfulbuild and test.
.TP
\fB\-\-dirty\fR
Do not remove work directory or _build environment, to
speed up debugging. Does not apply patches or download
source.
.TP
\fB\-q\fR, \fB\-\-quiet\fR
do not display progress bar
.TP
\fB\-\-debug\fR
Show debug output from source checkouts and conda
.TP
\fB\-\-token\fR TOKEN
Token to pass through to anaconda upload
.TP
\fB\-\-user\fR USER
User/organization to upload packages to on
anaconda.org or pypi
.TP
\fB\-\-no\-force\-upload\fR
Disable force upload to anaconda.org, preventing
overwriting any existing packages
.TP
\fB\-\-no\-activate\fR
do not activate the build and test envs; just prepend
to PATH
.TP
\fB\-\-no\-build\-id\fR
do not generate unique build folder names. Use if
having issues with paths being too long.
.TP
\fB\-\-croot\fR CROOT
Build root folder. Equivalent to CONDA_BLD_PATH, but
applies only to this call of conda\-build.
.TP
\fB\-\-verify\fR
do not run verification on recipes or packages when
building
.TP
\fB\-\-output\-folder\fR OUTPUT_FOLDER
folder to dump output package to. Package are moved
here if build or test succeeds. Destination folder
must exist prior to using this.
.TP
\fB\-\-no\-prefix\-length\-fallback\fR
Disable fallback to older 80 character prefix length
if environment creation fails due to insufficient
prefix length in dependency packages
.TP
\fB\-\-prefix\-length\-fallback\fR
Disable fallback to older 80 character prefix length
if environment creation fails due to insufficient
prefix length in dependency packages
.TP
\fB\-\-prefix\-length\fR _PREFIX_LENGTH
length of build prefix. For packages with binaries
that embed the path, this is critical to ensuring that
your package can run as many places as possible.
Notethat this value can be altered by the OS below
conda\-build (e.g. encrypted filesystems on Linux), and
you should prefer to set \fB\-\-croot\fR to a non\-encrypted
location instead, so that you maintain a known prefix
length.
.TP
\fB\-\-no\-locking\fR
Disable locking, to avoid unresolved race condition
issues. Unsafe to run multiplebuilds at once on one
system with this set.
.TP
\fB\-\-no\-remove\-work\-dir\fR
Disable removal of the work dir before testing. Be
careful using this option, as you package may depend
on files that are not included in the package, and may
passtests, but ultimately fail on installed systems.
.TP
\fB\-\-long\-test\-prefix\fR
Use a long prefix for the test prefix, as well as the
build prefix. Affects only Linux and Mac. Prefix
length matches the \fB\-\-prefix\-length\fR flag. This is on by
default in conda\-build 3.0+
.TP
\fB\-\-no\-long\-test\-prefix\fR
Do not use a long prefix for the test prefix, as well
as the build prefix. Affects only Linux and Mac.
Prefix length matches the \fB\-\-prefix\-length\fR flag.
.TP
\fB\-\-keep\-going\fR, \fB\-k\fR
When running tests, keep going after each failure.
Default is to stop on the first failure.
.TP
\fB\-\-cache\-dir\fR CACHE_DIR
Path to store the source files (archives, git clones,
etc.) during the build.
.TP
\fB\-\-no\-copy\-test\-source\-files\fR
Disables copying the files necessary for testing the
package into the info/test folder. Passing this
argument means it may not be possible to test the
package without internet access. There is also a
danger that the source archive(s) containing the files
could become unavailable sometime in the future.
.TP
\fB\-c\fR CHANNEL, \fB\-\-channel\fR CHANNEL
Additional channel to search for packages. These are
URLs searched in the order they are given (including
file:// for local directories). Then, the defaults or
channels from .condarc are searched (unless
\fB\-\-override\-channels\fR is given). You can use 'defaults'
to get the default packages for conda, and 'system' to
get the system packages, which also takes .condarc
into account. You can also use any name and the
\&.condarc channel_alias value will be prepended. The
default channel_alias is http://conda.anaconda.org/.
.TP
\fB\-\-override\-channels\fR
Do not search default or .condarc channels. Requires
\fB\-\-channel\fR.
.SS "PyPI upload parameters (twine):"
.TP
\fB\-\-password\fR PASSWORD
password to use when uploading packages to pypi
.TP
\fB\-\-sign\fR SIGN
sign files when uploading to pypi
.TP
\fB\-\-sign\-with\fR SIGN_WITH
program to use to sign files when uploading to pypi
.TP
\fB\-\-identity\fR IDENTITY
GPG identity to use to sign files when uploading to
pypi
.TP
\fB\-\-config\-file\fR CONFIG_FILE
path to .pypirc file to use when uploading to pypi
.TP
\fB\-\-repository\fR REPOSITORY, \fB\-r\fR REPOSITORY
PyPI repository to upload to
