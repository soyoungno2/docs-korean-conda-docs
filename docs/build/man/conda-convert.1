.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.46.4.
.TH CONDA "1" "1ì›” 2018" "Anaconda, Inc." "User Commands"
.SH NAME
conda \- conda convert
.SH DESCRIPTION
usage: conda\-convert [\-h]
.TP
[\-p {osx\-64,linux\-32,linux\-64,linux\-ppc64le,linux\-armv6l,linux\-armv7l,linux\-aarch64,win\-32,win\-64,all}]
[\-\-dependencies [DEPENDENCIES [DEPENDENCIES ...]]]
[\-\-show\-imports] [\-f] [\-o OUTPUT_DIR] [\-v] [\-\-dry\-run]
[\-q]
files [files ...]
.PP
Various tools to convert conda packages. Takes a pure Python package build for
one platform and converts it to work on one or more other platforms, or
all.
.SH OPTIONS
.SS "positional arguments:"
.TP
files
Package files to convert.
.SS "optional arguments:"
.TP
\fB\-h\fR, \fB\-\-help\fR
Show this help message and exit.
.TP
\fB\-p\fR {osx\-64,linux\-32,linux\-64,linux\-ppc64le,linux\-armv6l,linux\-armv7l,linux\-aarch64,win\-32,win\-64,all}, \fB\-\-platform\fR {osx\-64,linux\-32,linux\-64,linux\-ppc64le,linux\-armv6l,linux\-armv7l,linux\-aarch64,win\-32,win\-64,all}
Platform to convert the packages to.
.TP
\fB\-\-dependencies\fR [DEPENDENCIES [DEPENDENCIES ...]], \fB\-d\fR [DEPENDENCIES [DEPENDENCIES ...]]
Additional (besides python) dependencies of the
converted package. To specify a version restriction
for a dependency, wrap the dependency in quotes, like
\&'package >=2.0'.
.TP
\fB\-\-show\-imports\fR
Show Python imports for compiled parts of the package.
.TP
\fB\-f\fR, \fB\-\-force\fR
Force convert, even when a package has compiled C
extensions.
.TP
\fB\-o\fR OUTPUT_DIR, \fB\-\-output\-dir\fR OUTPUT_DIR
Directory to write the output files. The packages will
be organized in platform/ subdirectories, e.g.,
win\-32/package\-1.0\-py27_0.tar.bz2.
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Print verbose output.
.TP
\fB\-\-dry\-run\fR
Only display what would have been done.
.TP
\fB\-q\fR, \fB\-\-quiet\fR
Don't print as much output.
.PP
Tool to convert packages
.PP
conda convert converts pure Python packages to other platforms.
.PP
Packages are automatically organized in subdirectories according to platform,
e.g.,
.PP
osx\-64/
.IP
package\-1.0\-py33.tar.bz2
.PP
win\-32/
.IP
package\-1.0\-py33.tar.bz2
.SH EXAMPLES
Convert a package built with conda build to Windows 64\-bit, and place the
resulting package in the current directory (supposing a default Anaconda
install on Mac OS X):
.IP
conda convert package\-1.0\-py33.tar.bz2 \-p win\-64
