===============
파이썬 관리
===============

.. contents::
   :local:
   :depth: 1


콘다는 파이썬을 다른 패키지와 똑같이 취급한다. 따라서 여러 버전의 파이썬을 쉽게 설치 관리하고 업데이트할 수 있다.

아나콘다는 파이썬 2.7,3.4,3.5,3.6을 지원한다. 파이썬2.7과 파이썬3.6이 기본 버전이고 설치에 사용한 인스톨러에 따라 결정된다.

* "Anaconda"와 "Miniconda" 인스톨러는 파이썬2.7이 기본이 된다.

* "Anaconda3"와 "Miniconda3" 인스톨러는 파이썬3.6이 기본이 된다.


사용 가능한 파이썬 버전 목록 보기
===========================================

터미널이나 아나콘다 프롬프트에서 다음을 실행해 설치 가능한 파이썬 버전을 나열한다.

.. code::

   conda search python

위 명령으로 패키지 이름에 ``python``\ 이 포함된 모든 패키지가 나타난다.

패키지 이름이 정확히 ``python``\ 인 패키지를 나열하려면 ``--full-name`` 옵션을 추가한다.
터미널이나 아나콘다 프롬프트에서 다음을 실행한다.

.. code::

   conda search --full-name python


다른 파이썬 버전 설치하기
=========================================

새 환경을 생성하고 그 환경에 다른 버전의 파이썬을 설치해 현재 파이썬 버전을 덮어쓰기 않고 다른 파이썬 버전을 설치한다.

#. 새 환경을 생성한다.

   * 파이썬3.6을 위한 환경을 생성하기 위해 터미널이나 아나콘다 프롬프트에서 다음을 실행한다.

     .. code-block:: bash

        conda create -n py36 python=3.6 anaconda

     주의: ``py36``\ 을 생성하고자 하는 환경 이름으로 바꾼다.
     ``anaconda``\ 는 아나콘다 배포를 구성하는 모든 파이썬 패키지를 포함하는 메타패키지다.
     ``python=3.6``\ 은 새 환경에 설치하고자 하는 패키지와 그 버전을 나타낸다.
     이 부분에 ``numpy=1.7``\ 이나 :ref:`복수의 패키지<installing multiple packages>` 같이 어떤 패키지도 들어갈 수 있다.

   * 파이썬2.7을 위한 환경을 생성하기 위해 터미널이나 아나콘다 프롬프트에서 다음을 실행한다.

     .. code-block:: bash

        conda create -n py27 python=2.7 anaconda

#. :ref:`새 환경을 활성화한다 <activate-env>`.

#. 새 환경이 :ref:`현재 환경 <determine-current-env>`\ 인지 확인한다.

#. 현재 환경이 새 파이썬 버전을 사용하는지 확인하기 위해 터미널이나 아나콘다 프롬프트에서 다음을 실행한다.

   .. code::

      python --version


다른 버전의 파이썬 사용하기
====================================

다른 버전의 파이썬이 설치된 환경으로 전환하기 위해 :ref:`환경을 활성화한다 <activate-env>`.


파이썬 업데이트/업그레이드 하기
=============================

터미널이나 아나콘다 프롬프트에서 다음 단계를 따라 진행한다.

파이썬3.4.2가 설치된 환경에서 다음 명령을 실행하면 파이썬은 3.4 시리즈의 가장 최신 버전으로 업데이트된다.

.. code-block:: bash

    conda update python

다음 명령은 파이썬을 다른 시리즈로 업그레이드한다. 여기에서는 파이썬의 3.6 시리즈가 설치된다.

.. code-block:: bash

    conda install python=3.6
