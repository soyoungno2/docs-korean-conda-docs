============
설치
============

.. contents::
   :local:
   :depth: 1

콘다(conda)를 :doc:`얻는 <download>` 가장 빠른 방법은 콘다와 그 의존 요소만을 포함하는
:ref:`아나콘다 <anaconda-glossary>`\ 의 미니 버전인 :ref:`미니콘다 <miniconda-glossary>`\ 를
설치하는 것이다. 콘다와 720여개의 오픈 소스 패키지도 설치하고 싶다면 아나콘다를 설치한다.

로컬 사용자에게는 아나콘다를 추천한다. 아나콘다는 관리자 권한을 요구하지 않는 가장 강력한 콘다 설치다.
관리자 권한이 필요한 시스템 전역 아나콘다를 설치할 수도 있다.

윈도우와 맥OS를 위한 그래픽 인스톨러에 대한 정보는 `아나콘다 설치 <http://docs.continuum.io/anaconda/install.html>`_\ 를 보자.


시스템 요구사항
===================

* 32비트 또는 64비트 컴퓨터

* 미니콘다를 위한 디스크 공간 400MB

* 아나콘다를 다운로드하고 설치하기 위한 디스크 공간 최소 3GB


* 윈도우, 맥OS, 리눅스

* 파이썬 2.7, 3.4, 3.5, 3.6.
* pycosat 패키지.
* PyYaml 패키지.
* Requests 패키지.

주의: 사용자 쓰기가 가능한 설치 경로를 선택하면 관리자 권한이나 루트 권한이 없어도 된다.


표준 설치
====================

다음 중 사용자의 운영 체제에 맞는 설치를 한다.

* :doc:`윈도우 <windows_ko>`.
* :doc:`맥OS <macos_ko>`.
* :doc:`리눅스 <linux_ko>`.


자동 설치
=========================

트래비스(travis) CI와 앱베이어(AppVeyor)와 같은 배포, 테스트, 빌드 서비스를 위해
미니콘다나 아나콘다의 :ref:`자동 설치 <silent-mode-glossary>`\ 를 사용할 수 있다.

다음 중 사용자의 운영체제에 맞는 자동 설치 안내를 따른다.

* :ref:`윈도우 <install-win-silent>`.
* :ref:`맥OS <install-macos-silent>`.
* :ref:`리눅스 <install-linux-silent>`.


다른 파이썬 설치나 패키지를 가지고 있는 시스템에서 파이썬 설치
============================================================================

콘다를 사용하기 위해 다른 파이썬 설치나 패키지를 삭제하지 않아도 된다.
시스템 파이썬, 맥OS의 홈브루(Homebrew) 패키지 관리자 같은 소스로부터 설치된 다른 파이썬,
판다스(pandas), 넘파이(NumPy)와 같이 pip로 전역에 설치된 패키지를 이미 가지고 있어도
콘다 사용을 위해 이를 삭제, 변경하지 않아도 된다.

일반적인 방법으로 아나콘다나 미니콘다를 설치하고 인스톨러가 파이썬의 콘다 설치를 PATH 환경 변수에 추가하게 한다.
PYTHONPATH 환경 변수를 설정하지 않아도 된다.

파이썬 콘다 설치가 사용자의 PATH 변수에 있는지 보기 위해 다음을 실행한다.

* 맥OS, 리눅스: 터미널에서 ``echo $PATH``\ 를 실행한다.

* 윈도우: 아나콘다 프롬프트에서 ``echo %PATH%``\ 를 실행한다.

현재 기본으로 설정된 파이썬 설치를 보기 위해 다음을 실행한다.

* 맥OS, 리눅스: 터미널에서 ``which python``\ 을 실행한다.

* 윈도우: 아나콘다 프롬프트에서 ``where python``\ 을 실행한다.

현재 콘다 환경에 설치된 패키지와 그 버전을 보기 위해 터미널이나 아나콘다 프롬프트에서 ``conda list``\ 를 실행한다.

.. toctree::
   :maxdepth: 1
   :hidden:

   download_ko
   windows_ko
   macos_ko
   linux_ko
   test-installation_ko
