콘다 소개
==============

**패키지, 하위 요소, 환경 관리를 어떤 언어에서도:Python, R, Scala, Java, Javascript, C/ C++, FORTRAN**

**콘다** 패키지 관리자 어플리케이션으로 패키지와 그 하위 요소를 빠르게 설치, 실행, 업데이트 할 수 있다. **콘다 커맨드** 는 다양한 패키지의 설치 관리를 위한 기초 인터페이스이다. 패키지 인덱스와 현재 설치를 쿼리하고 검색하거나 새로운 환경 생성, 기존 환경으로의 패키지 설치와 업데이트를 할 수 있다.
:doc:`/using/index_ko` 섹션에서 상세 정보를 볼 수 있다.

콘다는 환경 관리자 어플리케이션이기도 하다. **콘다 환경** 이란 이미 설치된 콘다 패키지의 특정한 모임이다. 예를 들어 Numpy 1.7과 그 하위 요소를 포함 하는 환경과 구 버전 테스트를 위한 Numpy 1.6 을 포함하는 환경이 있다고 하자. 이 때 환경을 전환해도 다른 환경은 영향을 받지 않는다. 환경들 간에 전환, 활성화, 비활성화를 간단히 할 수 있다. 환경의 카피를 생성해 사용자의 환경을 공유할 수 있다. 카피는 yaml 파일이다.

참고: :doc:`/using/envs_ko`.

**콘다 패키지** 는 압축된 tarball 파일로 시스템 레벨 라이브러리, 파이썬, 기타 모듈, 실행 프로그램, 그 외 다른 요소들을 포함한다. 콘다는 패키지와 플랫폼 간의 하위 요소 추적을 지속한다.

콘다 패키지는 이를 포함하는 디렉토리로의 URL인 리모트 채널로 다운로드 된다. 콘다 커맨드는 채널의 디폴트셋을 찾고 패키지는 http://repo.continuum.io/pkgs/ 로부터 자동으로 다운로드, 업데이트 된다.

참고: :doc:`/using/pkgs_ko`.

사용자는 어떤 리모트 채널이 자동으로 검색될지 설정할 수 있다. 예를 들어, 개인 채널이나 내부 채널을 만들고자 할 때. (Configuration 에서 세부 사항을 보자.)

**conda build** 커맨드는 새로운 패키지를 생성한다. 생성된 패키지는 선택시 PyPi, GitHub, Anaconda.org 로 업로드 된다.

참고: :doc:`building/build_ko`, :doc:`glossary_ko`.
